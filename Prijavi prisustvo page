import React from "react";
import "../../style/home.css";
import Navbar from "../reusable/Navbar.jsx";
import { useState, useEffect } from "react";
import Swal from "sweetalert2";
import axios from "axios";
import { useNavigate } from "react-router-dom";
import moment from "moment";

function PrijaviPrisustvoPage({}) {
  const [formData, setFormData] = useState({});
  const [termini, setTermini] = useState(null);
  const [dani, setDani] = useState(null);

  const navigate = useNavigate();

  var config = {
    method: "post",
    maxBodyLength: Infinity,
    url: "http://127.0.0.1:8000/api/terminizadan",
    headers: {
      Authorization: "Bearer " + window.sessionStorage.getItem("token"),
      Accept: "application/json",
    },
    data: {
      dan_id: -1,
    },
  };

  var config2 = {
    method: "get",
    maxBodyLength: Infinity,
    url: "http://127.0.0.1:8000/api/mojraspored",
    headers: {
      Authorization: "Bearer " + window.sessionStorage.getItem("token"),
      Accept: "application/json",
    },
    data: {},
  };

  var config3 = {
    method: "post",
    maxBodyLength: Infinity,
    url: "http://127.0.0.1:8000/api/prijaviprisutnost",
    headers: {
      Authorization: "Bearer " + window.sessionStorage.getItem("token"),
      Accept: "application/json",
    },
    data: {
      termin_id: -1,
    },
  };
  useEffect(() => {
    if (dani === null) {
      axios
        .get("http://127.0.0.1:8000/api/mojraspored", config)
        .then((response) => {
          console.log(response.data);
          setDani(response.data.data.dani);
        })
        .catch(function (error) {
          if (error.status === 404) {
            Swal.fire("Nije vam dodeljen raspored.\nObratite se administratoru.", "", "info");
            navigate("/home");
          } else {
            console.log(error);
          }
        });
    }
  }, []);

  function handleInput(e) {
    if (e.target.name === "dan") {
      console.log(dani);
      console.log(e.target.value);
      console.log(moment(e.target.value).format("YYYY-MM-DD"));
      var id = dani.find((o) => o.datum === moment(e.target.value).format("YYYY-MM-DD")).id;
      config.data.dan_id = id;
      axios(config)
        .then(function (response) {
          console.log(response);
          setTermini(response.data.termini);
        })
        .catch(function (error) {
          console.log(error);
        });
    } else {
      setFormData({
        ...formData,
        [e.target.name]: e.target.value,
      });
    }
  }

  function submitForm(e) {
    e.preventDefault();
    config3.data.termin_id = formData.termin;
    axios(config3)
      .then(function (response) {
        if (response.data.code === 200) {
          Swal.fire("Uspe≈°no prijavljen termin.", "", "success");
        }
      })
      .catch(function (error) {
        console.log(error);
      });
  }

  return (
    <div className="">
      <div className="banner">
        <img src={require("../../pic/topbannerslim.jpg")} />
        <p className="bannertxt">Sistem za raspored nastave</p>
      </div>
      <div className="navbar">
        <Navbar></Navbar>
      </div>
      <div className="content">
        <h1 className="instrtext">Prijava termina</h1>
        <div className="container ctdiv">
          <form className="form" onSubmit={submitForm}>
            <label for="dan">Datum:</label>
            <input id="dan" onChange={handleInput} class="form-control" type="date" name="dan" value={formData.datum} />
            <br></br>
            {termini == null ? (
              ""
            ) : (
              <div>
                <label for="predmet">Predmet:</label>
                <select id="termin" className="form-control form-control-sm form-select" value={formData.termin} onChange={handleInput} name="termin">
                  {termini.map((t, i) => (
                    <option key={i} value={t.id}>
                      {t.predmet.naziv}
                    </option>
                  ))}
                </select>
                <br></br>
                <input type="submit" className="btn btn-primary" value="Prijavi prisustvo"></input>
              </div>
            )}
            <br></br>
          </form>
        </div>
      </div>
    </div>
  );
}
export default PrijaviPrisustvoPage;
